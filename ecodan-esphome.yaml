substitutions:
  name: ecodan-heatpump
  friendlyName: Ecodan heatpump

esphome:
  name: ${name}
  friendly_name: ${friendlyName}

# Enable Home Assistant API
api:
  encryption:
    key: "foboaXashM3BwT3mag95dnZCmYPj68hvhc2hec7Ifz4="

ota:
  - platform: esphome
    password: "a0ce5685ff284b2a1889a8a8422efe54"

external_components:
  - source: github://gekkekoe/esphome-ecodan-hp@main
    components: [ ecodan ]
    refresh: always

packages:
  remote_package:
    url: https://github.com/gekkekoe/esphome-ecodan-hp/
    ref: main
    refresh: always
    files: [ 
            confs/base.yaml,        # required
            confs/esp8266.yaml,     # confs/esp32.yaml, for regular board
            confs/zone1.yaml,
            ## enable if you want to use zone 2
            confs/zone2.yaml,
            ## enable label language file
            #confs/ecodan-labels-en.yaml,
            #confs/ecodan-labels-nl.yaml,
            #confs/ecodan-labels-it.yaml,
            confs/ecodan-labels-fr.yaml,
            confs/server-control.yaml,
            #confs/debug.yaml,
            ## enable this to monitor WiFi status with ESP in-built LED
            #confs/status_led.yaml,
            ## enable this to monitor status with custom led colors, uses https://github.com/esphome/esphome/pull/5814
            #confs/status_led_rgb.yaml,
            confs/wifi.yaml
           ]

# enable logger
logger:
  baud_rate: 0
  logs:
    esp32.preferences: DEBUG
    sensor: DEBUG
    text_sensor: DEBUG
    binary_sensor: DEBUG
    switch: DEBUG
    button: DEBUG
    number: DEBUG
    climate: DEBUG
    component: ERROR
    ecodan.component: ERROR

# Enable Web server.
web_server:
  port: 80
  version: 3
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

ecodan:
  id: ecodan_instance
  uart_id: uart_ecodan

